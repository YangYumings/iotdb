/**
 * Autogenerated by Thrift Compiler (0.20.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.iotdb.service.rpc.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.20.0)", date = "2025-05-09")
public class TSInsertStringRecordsOfOneDeviceReq implements org.apache.thrift.TBase<TSInsertStringRecordsOfOneDeviceReq, TSInsertStringRecordsOfOneDeviceReq._Fields>, java.io.Serializable, Cloneable, Comparable<TSInsertStringRecordsOfOneDeviceReq> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TSInsertStringRecordsOfOneDeviceReq");

  private static final org.apache.thrift.protocol.TField SESSION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sessionId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField PREFIX_PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("prefixPath", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MEASUREMENTS_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("measurementsList", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField VALUES_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("valuesList", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField TIMESTAMPS_FIELD_DESC = new org.apache.thrift.protocol.TField("timestamps", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField IS_ALIGNED_FIELD_DESC = new org.apache.thrift.protocol.TField("isAligned", org.apache.thrift.protocol.TType.BOOL, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TSInsertStringRecordsOfOneDeviceReqStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TSInsertStringRecordsOfOneDeviceReqTupleSchemeFactory();

  public long sessionId; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String prefixPath; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.String>> measurementsList; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.String>> valuesList; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Long> timestamps; // required
  public boolean isAligned; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SESSION_ID((short)1, "sessionId"),
    PREFIX_PATH((short)2, "prefixPath"),
    MEASUREMENTS_LIST((short)3, "measurementsList"),
    VALUES_LIST((short)4, "valuesList"),
    TIMESTAMPS((short)5, "timestamps"),
    IS_ALIGNED((short)6, "isAligned");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SESSION_ID
          return SESSION_ID;
        case 2: // PREFIX_PATH
          return PREFIX_PATH;
        case 3: // MEASUREMENTS_LIST
          return MEASUREMENTS_LIST;
        case 4: // VALUES_LIST
          return VALUES_LIST;
        case 5: // TIMESTAMPS
          return TIMESTAMPS;
        case 6: // IS_ALIGNED
          return IS_ALIGNED;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SESSIONID_ISSET_ID = 0;
  private static final int __ISALIGNED_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.IS_ALIGNED};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SESSION_ID, new org.apache.thrift.meta_data.FieldMetaData("sessionId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PREFIX_PATH, new org.apache.thrift.meta_data.FieldMetaData("prefixPath", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEASUREMENTS_LIST, new org.apache.thrift.meta_data.FieldMetaData("measurementsList", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)))));
    tmpMap.put(_Fields.VALUES_LIST, new org.apache.thrift.meta_data.FieldMetaData("valuesList", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)))));
    tmpMap.put(_Fields.TIMESTAMPS, new org.apache.thrift.meta_data.FieldMetaData("timestamps", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.IS_ALIGNED, new org.apache.thrift.meta_data.FieldMetaData("isAligned", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TSInsertStringRecordsOfOneDeviceReq.class, metaDataMap);
  }

  public TSInsertStringRecordsOfOneDeviceReq() {
  }

  public TSInsertStringRecordsOfOneDeviceReq(
    long sessionId,
    java.lang.String prefixPath,
    java.util.List<java.util.List<java.lang.String>> measurementsList,
    java.util.List<java.util.List<java.lang.String>> valuesList,
    java.util.List<java.lang.Long> timestamps)
  {
    this();
    this.sessionId = sessionId;
    setSessionIdIsSet(true);
    this.prefixPath = prefixPath;
    this.measurementsList = measurementsList;
    this.valuesList = valuesList;
    this.timestamps = timestamps;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TSInsertStringRecordsOfOneDeviceReq(TSInsertStringRecordsOfOneDeviceReq other) {
    __isset_bitfield = other.__isset_bitfield;
    this.sessionId = other.sessionId;
    if (other.isSetPrefixPath()) {
      this.prefixPath = other.prefixPath;
    }
    if (other.isSetMeasurementsList()) {
      java.util.List<java.util.List<java.lang.String>> __this__measurementsList = new java.util.ArrayList<java.util.List<java.lang.String>>(other.measurementsList.size());
      for (java.util.List<java.lang.String> other_element : other.measurementsList) {
        java.util.List<java.lang.String> __this__measurementsList_copy = new java.util.ArrayList<java.lang.String>(other_element);
        __this__measurementsList.add(__this__measurementsList_copy);
      }
      this.measurementsList = __this__measurementsList;
    }
    if (other.isSetValuesList()) {
      java.util.List<java.util.List<java.lang.String>> __this__valuesList = new java.util.ArrayList<java.util.List<java.lang.String>>(other.valuesList.size());
      for (java.util.List<java.lang.String> other_element : other.valuesList) {
        java.util.List<java.lang.String> __this__valuesList_copy = new java.util.ArrayList<java.lang.String>(other_element);
        __this__valuesList.add(__this__valuesList_copy);
      }
      this.valuesList = __this__valuesList;
    }
    if (other.isSetTimestamps()) {
      java.util.List<java.lang.Long> __this__timestamps = new java.util.ArrayList<java.lang.Long>(other.timestamps);
      this.timestamps = __this__timestamps;
    }
    this.isAligned = other.isAligned;
  }

  @Override
  public TSInsertStringRecordsOfOneDeviceReq deepCopy() {
    return new TSInsertStringRecordsOfOneDeviceReq(this);
  }

  @Override
  public void clear() {
    setSessionIdIsSet(false);
    this.sessionId = 0;
    this.prefixPath = null;
    this.measurementsList = null;
    this.valuesList = null;
    this.timestamps = null;
    setIsAlignedIsSet(false);
    this.isAligned = false;
  }

  public long getSessionId() {
    return this.sessionId;
  }

  public TSInsertStringRecordsOfOneDeviceReq setSessionId(long sessionId) {
    this.sessionId = sessionId;
    setSessionIdIsSet(true);
    return this;
  }

  public void unsetSessionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SESSIONID_ISSET_ID);
  }

  /** Returns true if field sessionId is set (has been assigned a value) and false otherwise */
  public boolean isSetSessionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SESSIONID_ISSET_ID);
  }

  public void setSessionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SESSIONID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getPrefixPath() {
    return this.prefixPath;
  }

  public TSInsertStringRecordsOfOneDeviceReq setPrefixPath(@org.apache.thrift.annotation.Nullable java.lang.String prefixPath) {
    this.prefixPath = prefixPath;
    return this;
  }

  public void unsetPrefixPath() {
    this.prefixPath = null;
  }

  /** Returns true if field prefixPath is set (has been assigned a value) and false otherwise */
  public boolean isSetPrefixPath() {
    return this.prefixPath != null;
  }

  public void setPrefixPathIsSet(boolean value) {
    if (!value) {
      this.prefixPath = null;
    }
  }

  public int getMeasurementsListSize() {
    return (this.measurementsList == null) ? 0 : this.measurementsList.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.lang.String>> getMeasurementsListIterator() {
    return (this.measurementsList == null) ? null : this.measurementsList.iterator();
  }

  public void addToMeasurementsList(java.util.List<java.lang.String> elem) {
    if (this.measurementsList == null) {
      this.measurementsList = new java.util.ArrayList<java.util.List<java.lang.String>>();
    }
    this.measurementsList.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.lang.String>> getMeasurementsList() {
    return this.measurementsList;
  }

  public TSInsertStringRecordsOfOneDeviceReq setMeasurementsList(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.String>> measurementsList) {
    this.measurementsList = measurementsList;
    return this;
  }

  public void unsetMeasurementsList() {
    this.measurementsList = null;
  }

  /** Returns true if field measurementsList is set (has been assigned a value) and false otherwise */
  public boolean isSetMeasurementsList() {
    return this.measurementsList != null;
  }

  public void setMeasurementsListIsSet(boolean value) {
    if (!value) {
      this.measurementsList = null;
    }
  }

  public int getValuesListSize() {
    return (this.valuesList == null) ? 0 : this.valuesList.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.lang.String>> getValuesListIterator() {
    return (this.valuesList == null) ? null : this.valuesList.iterator();
  }

  public void addToValuesList(java.util.List<java.lang.String> elem) {
    if (this.valuesList == null) {
      this.valuesList = new java.util.ArrayList<java.util.List<java.lang.String>>();
    }
    this.valuesList.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.lang.String>> getValuesList() {
    return this.valuesList;
  }

  public TSInsertStringRecordsOfOneDeviceReq setValuesList(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.String>> valuesList) {
    this.valuesList = valuesList;
    return this;
  }

  public void unsetValuesList() {
    this.valuesList = null;
  }

  /** Returns true if field valuesList is set (has been assigned a value) and false otherwise */
  public boolean isSetValuesList() {
    return this.valuesList != null;
  }

  public void setValuesListIsSet(boolean value) {
    if (!value) {
      this.valuesList = null;
    }
  }

  public int getTimestampsSize() {
    return (this.timestamps == null) ? 0 : this.timestamps.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Long> getTimestampsIterator() {
    return (this.timestamps == null) ? null : this.timestamps.iterator();
  }

  public void addToTimestamps(long elem) {
    if (this.timestamps == null) {
      this.timestamps = new java.util.ArrayList<java.lang.Long>();
    }
    this.timestamps.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Long> getTimestamps() {
    return this.timestamps;
  }

  public TSInsertStringRecordsOfOneDeviceReq setTimestamps(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Long> timestamps) {
    this.timestamps = timestamps;
    return this;
  }

  public void unsetTimestamps() {
    this.timestamps = null;
  }

  /** Returns true if field timestamps is set (has been assigned a value) and false otherwise */
  public boolean isSetTimestamps() {
    return this.timestamps != null;
  }

  public void setTimestampsIsSet(boolean value) {
    if (!value) {
      this.timestamps = null;
    }
  }

  public boolean isIsAligned() {
    return this.isAligned;
  }

  public TSInsertStringRecordsOfOneDeviceReq setIsAligned(boolean isAligned) {
    this.isAligned = isAligned;
    setIsAlignedIsSet(true);
    return this;
  }

  public void unsetIsAligned() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISALIGNED_ISSET_ID);
  }

  /** Returns true if field isAligned is set (has been assigned a value) and false otherwise */
  public boolean isSetIsAligned() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISALIGNED_ISSET_ID);
  }

  public void setIsAlignedIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISALIGNED_ISSET_ID, value);
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case SESSION_ID:
      if (value == null) {
        unsetSessionId();
      } else {
        setSessionId((java.lang.Long)value);
      }
      break;

    case PREFIX_PATH:
      if (value == null) {
        unsetPrefixPath();
      } else {
        setPrefixPath((java.lang.String)value);
      }
      break;

    case MEASUREMENTS_LIST:
      if (value == null) {
        unsetMeasurementsList();
      } else {
        setMeasurementsList((java.util.List<java.util.List<java.lang.String>>)value);
      }
      break;

    case VALUES_LIST:
      if (value == null) {
        unsetValuesList();
      } else {
        setValuesList((java.util.List<java.util.List<java.lang.String>>)value);
      }
      break;

    case TIMESTAMPS:
      if (value == null) {
        unsetTimestamps();
      } else {
        setTimestamps((java.util.List<java.lang.Long>)value);
      }
      break;

    case IS_ALIGNED:
      if (value == null) {
        unsetIsAligned();
      } else {
        setIsAligned((java.lang.Boolean)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SESSION_ID:
      return getSessionId();

    case PREFIX_PATH:
      return getPrefixPath();

    case MEASUREMENTS_LIST:
      return getMeasurementsList();

    case VALUES_LIST:
      return getValuesList();

    case TIMESTAMPS:
      return getTimestamps();

    case IS_ALIGNED:
      return isIsAligned();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SESSION_ID:
      return isSetSessionId();
    case PREFIX_PATH:
      return isSetPrefixPath();
    case MEASUREMENTS_LIST:
      return isSetMeasurementsList();
    case VALUES_LIST:
      return isSetValuesList();
    case TIMESTAMPS:
      return isSetTimestamps();
    case IS_ALIGNED:
      return isSetIsAligned();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TSInsertStringRecordsOfOneDeviceReq)
      return this.equals((TSInsertStringRecordsOfOneDeviceReq)that);
    return false;
  }

  public boolean equals(TSInsertStringRecordsOfOneDeviceReq that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_sessionId = true;
    boolean that_present_sessionId = true;
    if (this_present_sessionId || that_present_sessionId) {
      if (!(this_present_sessionId && that_present_sessionId))
        return false;
      if (this.sessionId != that.sessionId)
        return false;
    }

    boolean this_present_prefixPath = true && this.isSetPrefixPath();
    boolean that_present_prefixPath = true && that.isSetPrefixPath();
    if (this_present_prefixPath || that_present_prefixPath) {
      if (!(this_present_prefixPath && that_present_prefixPath))
        return false;
      if (!this.prefixPath.equals(that.prefixPath))
        return false;
    }

    boolean this_present_measurementsList = true && this.isSetMeasurementsList();
    boolean that_present_measurementsList = true && that.isSetMeasurementsList();
    if (this_present_measurementsList || that_present_measurementsList) {
      if (!(this_present_measurementsList && that_present_measurementsList))
        return false;
      if (!this.measurementsList.equals(that.measurementsList))
        return false;
    }

    boolean this_present_valuesList = true && this.isSetValuesList();
    boolean that_present_valuesList = true && that.isSetValuesList();
    if (this_present_valuesList || that_present_valuesList) {
      if (!(this_present_valuesList && that_present_valuesList))
        return false;
      if (!this.valuesList.equals(that.valuesList))
        return false;
    }

    boolean this_present_timestamps = true && this.isSetTimestamps();
    boolean that_present_timestamps = true && that.isSetTimestamps();
    if (this_present_timestamps || that_present_timestamps) {
      if (!(this_present_timestamps && that_present_timestamps))
        return false;
      if (!this.timestamps.equals(that.timestamps))
        return false;
    }

    boolean this_present_isAligned = true && this.isSetIsAligned();
    boolean that_present_isAligned = true && that.isSetIsAligned();
    if (this_present_isAligned || that_present_isAligned) {
      if (!(this_present_isAligned && that_present_isAligned))
        return false;
      if (this.isAligned != that.isAligned)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(sessionId);

    hashCode = hashCode * 8191 + ((isSetPrefixPath()) ? 131071 : 524287);
    if (isSetPrefixPath())
      hashCode = hashCode * 8191 + prefixPath.hashCode();

    hashCode = hashCode * 8191 + ((isSetMeasurementsList()) ? 131071 : 524287);
    if (isSetMeasurementsList())
      hashCode = hashCode * 8191 + measurementsList.hashCode();

    hashCode = hashCode * 8191 + ((isSetValuesList()) ? 131071 : 524287);
    if (isSetValuesList())
      hashCode = hashCode * 8191 + valuesList.hashCode();

    hashCode = hashCode * 8191 + ((isSetTimestamps()) ? 131071 : 524287);
    if (isSetTimestamps())
      hashCode = hashCode * 8191 + timestamps.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsAligned()) ? 131071 : 524287);
    if (isSetIsAligned())
      hashCode = hashCode * 8191 + ((isAligned) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(TSInsertStringRecordsOfOneDeviceReq other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetSessionId(), other.isSetSessionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSessionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sessionId, other.sessionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPrefixPath(), other.isSetPrefixPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrefixPath()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.prefixPath, other.prefixPath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetMeasurementsList(), other.isSetMeasurementsList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMeasurementsList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.measurementsList, other.measurementsList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetValuesList(), other.isSetValuesList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValuesList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.valuesList, other.valuesList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTimestamps(), other.isSetTimestamps());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTimestamps()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timestamps, other.timestamps);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIsAligned(), other.isSetIsAligned());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsAligned()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isAligned, other.isAligned);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TSInsertStringRecordsOfOneDeviceReq(");
    boolean first = true;

    sb.append("sessionId:");
    sb.append(this.sessionId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("prefixPath:");
    if (this.prefixPath == null) {
      sb.append("null");
    } else {
      sb.append(this.prefixPath);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("measurementsList:");
    if (this.measurementsList == null) {
      sb.append("null");
    } else {
      sb.append(this.measurementsList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("valuesList:");
    if (this.valuesList == null) {
      sb.append("null");
    } else {
      sb.append(this.valuesList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("timestamps:");
    if (this.timestamps == null) {
      sb.append("null");
    } else {
      sb.append(this.timestamps);
    }
    first = false;
    if (isSetIsAligned()) {
      if (!first) sb.append(", ");
      sb.append("isAligned:");
      sb.append(this.isAligned);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'sessionId' because it's a primitive and you chose the non-beans generator.
    if (prefixPath == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'prefixPath' was not present! Struct: " + toString());
    }
    if (measurementsList == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'measurementsList' was not present! Struct: " + toString());
    }
    if (valuesList == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'valuesList' was not present! Struct: " + toString());
    }
    if (timestamps == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'timestamps' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TSInsertStringRecordsOfOneDeviceReqStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TSInsertStringRecordsOfOneDeviceReqStandardScheme getScheme() {
      return new TSInsertStringRecordsOfOneDeviceReqStandardScheme();
    }
  }

  private static class TSInsertStringRecordsOfOneDeviceReqStandardScheme extends org.apache.thrift.scheme.StandardScheme<TSInsertStringRecordsOfOneDeviceReq> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TSInsertStringRecordsOfOneDeviceReq struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SESSION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sessionId = iprot.readI64();
              struct.setSessionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PREFIX_PATH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.prefixPath = iprot.readString();
              struct.setPrefixPathIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MEASUREMENTS_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list350 = iprot.readListBegin();
                struct.measurementsList = new java.util.ArrayList<java.util.List<java.lang.String>>(_list350.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> _elem351;
                for (int _i352 = 0; _i352 < _list350.size; ++_i352)
                {
                  {
                    org.apache.thrift.protocol.TList _list353 = iprot.readListBegin();
                    _elem351 = new java.util.ArrayList<java.lang.String>(_list353.size);
                    @org.apache.thrift.annotation.Nullable java.lang.String _elem354;
                    for (int _i355 = 0; _i355 < _list353.size; ++_i355)
                    {
                      _elem354 = iprot.readString();
                      _elem351.add(_elem354);
                    }
                    iprot.readListEnd();
                  }
                  struct.measurementsList.add(_elem351);
                }
                iprot.readListEnd();
              }
              struct.setMeasurementsListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VALUES_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list356 = iprot.readListBegin();
                struct.valuesList = new java.util.ArrayList<java.util.List<java.lang.String>>(_list356.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> _elem357;
                for (int _i358 = 0; _i358 < _list356.size; ++_i358)
                {
                  {
                    org.apache.thrift.protocol.TList _list359 = iprot.readListBegin();
                    _elem357 = new java.util.ArrayList<java.lang.String>(_list359.size);
                    @org.apache.thrift.annotation.Nullable java.lang.String _elem360;
                    for (int _i361 = 0; _i361 < _list359.size; ++_i361)
                    {
                      _elem360 = iprot.readString();
                      _elem357.add(_elem360);
                    }
                    iprot.readListEnd();
                  }
                  struct.valuesList.add(_elem357);
                }
                iprot.readListEnd();
              }
              struct.setValuesListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TIMESTAMPS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list362 = iprot.readListBegin();
                struct.timestamps = new java.util.ArrayList<java.lang.Long>(_list362.size);
                long _elem363;
                for (int _i364 = 0; _i364 < _list362.size; ++_i364)
                {
                  _elem363 = iprot.readI64();
                  struct.timestamps.add(_elem363);
                }
                iprot.readListEnd();
              }
              struct.setTimestampsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // IS_ALIGNED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isAligned = iprot.readBool();
              struct.setIsAlignedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetSessionId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'sessionId' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TSInsertStringRecordsOfOneDeviceReq struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(SESSION_ID_FIELD_DESC);
      oprot.writeI64(struct.sessionId);
      oprot.writeFieldEnd();
      if (struct.prefixPath != null) {
        oprot.writeFieldBegin(PREFIX_PATH_FIELD_DESC);
        oprot.writeString(struct.prefixPath);
        oprot.writeFieldEnd();
      }
      if (struct.measurementsList != null) {
        oprot.writeFieldBegin(MEASUREMENTS_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.measurementsList.size()));
          for (java.util.List<java.lang.String> _iter365 : struct.measurementsList)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, _iter365.size()));
              for (java.lang.String _iter366 : _iter365)
              {
                oprot.writeString(_iter366);
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.valuesList != null) {
        oprot.writeFieldBegin(VALUES_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.valuesList.size()));
          for (java.util.List<java.lang.String> _iter367 : struct.valuesList)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, _iter367.size()));
              for (java.lang.String _iter368 : _iter367)
              {
                oprot.writeString(_iter368);
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.timestamps != null) {
        oprot.writeFieldBegin(TIMESTAMPS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.timestamps.size()));
          for (long _iter369 : struct.timestamps)
          {
            oprot.writeI64(_iter369);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.isSetIsAligned()) {
        oprot.writeFieldBegin(IS_ALIGNED_FIELD_DESC);
        oprot.writeBool(struct.isAligned);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TSInsertStringRecordsOfOneDeviceReqTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TSInsertStringRecordsOfOneDeviceReqTupleScheme getScheme() {
      return new TSInsertStringRecordsOfOneDeviceReqTupleScheme();
    }
  }

  private static class TSInsertStringRecordsOfOneDeviceReqTupleScheme extends org.apache.thrift.scheme.TupleScheme<TSInsertStringRecordsOfOneDeviceReq> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TSInsertStringRecordsOfOneDeviceReq struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI64(struct.sessionId);
      oprot.writeString(struct.prefixPath);
      {
        oprot.writeI32(struct.measurementsList.size());
        for (java.util.List<java.lang.String> _iter370 : struct.measurementsList)
        {
          {
            oprot.writeI32(_iter370.size());
            for (java.lang.String _iter371 : _iter370)
            {
              oprot.writeString(_iter371);
            }
          }
        }
      }
      {
        oprot.writeI32(struct.valuesList.size());
        for (java.util.List<java.lang.String> _iter372 : struct.valuesList)
        {
          {
            oprot.writeI32(_iter372.size());
            for (java.lang.String _iter373 : _iter372)
            {
              oprot.writeString(_iter373);
            }
          }
        }
      }
      {
        oprot.writeI32(struct.timestamps.size());
        for (long _iter374 : struct.timestamps)
        {
          oprot.writeI64(_iter374);
        }
      }
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetIsAligned()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetIsAligned()) {
        oprot.writeBool(struct.isAligned);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TSInsertStringRecordsOfOneDeviceReq struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.sessionId = iprot.readI64();
      struct.setSessionIdIsSet(true);
      struct.prefixPath = iprot.readString();
      struct.setPrefixPathIsSet(true);
      {
        org.apache.thrift.protocol.TList _list375 = iprot.readListBegin(org.apache.thrift.protocol.TType.LIST);
        struct.measurementsList = new java.util.ArrayList<java.util.List<java.lang.String>>(_list375.size);
        @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> _elem376;
        for (int _i377 = 0; _i377 < _list375.size; ++_i377)
        {
          {
            org.apache.thrift.protocol.TList _list378 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRING);
            _elem376 = new java.util.ArrayList<java.lang.String>(_list378.size);
            @org.apache.thrift.annotation.Nullable java.lang.String _elem379;
            for (int _i380 = 0; _i380 < _list378.size; ++_i380)
            {
              _elem379 = iprot.readString();
              _elem376.add(_elem379);
            }
          }
          struct.measurementsList.add(_elem376);
        }
      }
      struct.setMeasurementsListIsSet(true);
      {
        org.apache.thrift.protocol.TList _list381 = iprot.readListBegin(org.apache.thrift.protocol.TType.LIST);
        struct.valuesList = new java.util.ArrayList<java.util.List<java.lang.String>>(_list381.size);
        @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> _elem382;
        for (int _i383 = 0; _i383 < _list381.size; ++_i383)
        {
          {
            org.apache.thrift.protocol.TList _list384 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRING);
            _elem382 = new java.util.ArrayList<java.lang.String>(_list384.size);
            @org.apache.thrift.annotation.Nullable java.lang.String _elem385;
            for (int _i386 = 0; _i386 < _list384.size; ++_i386)
            {
              _elem385 = iprot.readString();
              _elem382.add(_elem385);
            }
          }
          struct.valuesList.add(_elem382);
        }
      }
      struct.setValuesListIsSet(true);
      {
        org.apache.thrift.protocol.TList _list387 = iprot.readListBegin(org.apache.thrift.protocol.TType.I64);
        struct.timestamps = new java.util.ArrayList<java.lang.Long>(_list387.size);
        long _elem388;
        for (int _i389 = 0; _i389 < _list387.size; ++_i389)
        {
          _elem388 = iprot.readI64();
          struct.timestamps.add(_elem388);
        }
      }
      struct.setTimestampsIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        struct.isAligned = iprot.readBool();
        struct.setIsAlignedIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

